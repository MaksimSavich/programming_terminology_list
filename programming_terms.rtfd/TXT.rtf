{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red21\green0\blue240;\red19\green0\blue235;
\red21\green0\blue240;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c12050\c12449\c95332;\cssrgb\c10631\c10831\c93756;
\cssrgb\c12050\c12449\c95333;\cssrgb\c50196\c50196\c50196;}
\margl1440\margr1440\vieww25400\viewh13240\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 ASCII\
\strokec4 A-0\strokec2 \uc0\u8232 \strokec4 Abend\strokec2 \uc0\u8232 \strokec4 Absolute address\strokec2 \uc0\u8232 \strokec4 Absolute Coding\strokec2 \uc0\u8232 \strokec4 Access violation\strokec2 \uc0\u8232 \strokec4 ACM\strokec2 \uc0\u8232 \strokec4 ActionScript\strokec2 \uc0\u8232 \strokec4 Action statement\strokec2 \uc0\u8232 \strokec4 ActiveX\strokec2 \uc0\u8232 \strokec4 Ada\strokec2 \uc0\u8232 \strokec4 Adaptive technology\strokec2 \uc0\u8232 \strokec4 Add\strokec2 \uc0\u8232 \strokec4 ADO\strokec2 \uc0\u8232 \strokec4 Advanced SCSI Programming Interface\strokec2 \uc0\u8232 \strokec4 Aggregate\strokec2 \uc0\u8232 \strokec4 Agile development methods\strokec2 \uc0\u8232 \strokec4 Agile Manifesto\strokec2 \uc0\u8232 \strokec4 AJAX\strokec2 \uc0\u8232 \strokec4 Alert\strokec2 \uc0\u8232 \strokec4 Algol\strokec2 \uc0\u8232 \strokec4 Algorithm\strokec2 \uc0\u8232 \strokec4 Allocate\strokec2 \uc0\u8232 \strokec4 Altair BASIC\strokec2 \uc0\u8232 \strokec4 Ambient Occlusion\strokec2 \uc0\u8232 \strokec4 AOP\strokec2 \uc0\u8232 \strokec4 API\strokec2 \uc0\u8232 \strokec4 APK\strokec2 \uc0\u8232 \strokec4 Applet\strokec2 \uc0\u8232 \strokec4 Argument\strokec2 \uc0\u8232 \strokec4 Arithmetic operator\strokec2 \uc0\u8232 \strokec4 Array\strokec2 \uc0\u8232 \strokec4 Array of pointers\strokec2 \uc0\u8232 \strokec4 ASCII\strokec2 \uc0\u8232 \strokec4 ASM\strokec2 \uc0\u8232 \strokec4 ASP\strokec2 \uc0\u8232 \strokec4 ASPI\strokec2 \uc0\u8232 \strokec4 Assembler\strokec2 \uc0\u8232 \strokec4 Assembly\strokec2 \uc0\u8232 \strokec4 Assembly language\strokec2 \uc0\u8232 \strokec4 Associative operation\strokec2 \uc0\u8232 \strokec4 Asynchronous JavaScript and XML\strokec2 \uc0\u8232 \strokec4 AutoHotkey\strokec2 \uc0\u8232 \strokec4 Automata-based programming\strokec2 \uc0\u8232 \strokec4 Automated unit testing\strokec2 \uc0\u8232 \strokec4 Automation\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec4 Babel\strokec2 \uc0\u8232 \strokec4 Back-end\strokec2 \uc0\u8232 \strokec4 Back-face culling\strokec2 \uc0\u8232 \strokec4 Background thread\strokec2 \uc0\u8232 \strokec4 Backpropagation neural network\strokec2 \uc0\u8232 \strokec4 Base address\strokec2 \uc0\u8232 \strokec4 Basic\strokec2 \uc0\u8232 \strokec4 Batch file\strokec2 \uc0\u8232 \strokec4 Batch job\strokec2 \uc0\u8232 \strokec4 BCPL\strokec2 \uc0\u8232 \strokec4 Bean\strokec2 \uc0\u8232 \strokec4 BeanShell\strokec2 \uc0\u8232 \strokec4 Binary Search\strokec2 \uc0\u8232 \strokec4 Bind\strokec2 \uc0\u8232 \strokec4 Bit shift\strokec2 \uc0\u8232 \strokec4 Bitwise operator\strokec2 \uc0\u8232 \strokec4 Block\strokec2 \uc0\u8232 \strokec4 Block-based programming\strokec2 \uc0\u8232 \strokec4 Block-level element\strokec2 \uc0\u8232 \strokec4 BOM\strokec2 \uc0\u8232 \strokec4 Bool\strokec2 \uc0\u8232 \strokec4 Boolean\strokec2 \uc0\u8232 \strokec4 Boolean data type\strokec2 \uc0\u8232 \strokec4 Bracket\strokec2 \uc0\u8232 \strokec4 Branch\strokec2 \uc0\u8232 \strokec4 Brooks\strokec2 \uc0\u8232 \strokec4 Browse\strokec2 \uc0\u8232 \strokec4 Bug\strokec2 \uc0\u8232 \strokec4 Bugfairy\strokec2 \uc0\u8232 \strokec4 Bug tracking\strokec2 \uc0\u8232 \strokec4 Build computer\strokec2 \uc0\u8232 \strokec4 Bytecode\strokec2 \
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 Curly bracket\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth3539\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt20 \clpadl20 \clpadb20 \clpadr20 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 C\strokec2 \uc0\u8232 \strokec4 C++\strokec2 \uc0\u8232 \strokec4 C#\strokec2 \uc0\u8232 \strokec4 Call\strokec2 \uc0\u8232 \strokec4 Callback\strokec2 \uc0\u8232 \strokec4 Camel book\strokec2 \uc0\u8232 \strokec4 CamelCase\strokec2 \uc0\u8232 \strokec4 Capture\strokec2 \uc0\u8232 \strokec4 Captured variable\strokec2 \uc0\u8232 \strokec4 CC\strokec2 \uc0\u8232 \strokec4 Cell style\strokec2 \uc0\u8232 \strokec4 CGI\strokec2 \uc0\u8232 \strokec4 Chaos model\strokec2 \uc0\u8232 \strokec4 Char\strokec2 \uc0\u8232 \strokec4 Character code\strokec2 \uc0\u8232 \strokec4 Character encoding\strokec2 \uc0\u8232 \strokec4 Character set\strokec2 \uc0\u8232 \strokec4 Circuit satisfiability problem\strokec2 \uc0\u8232 \strokec4 Class\strokec2 \uc0\u8232 \strokec4 Class\strokec2 \uc0\u8232 \strokec4 Classpath\strokec2 \uc0\u8232 \strokec4 Clojure\strokec2 \uc0\u8232 \strokec4 CLOS\strokec2 \uc0\u8232 \strokec4 Closing block\strokec2 \uc0\u8232 \strokec4 Closure\strokec2 \uc0\u8232 \strokec4 CLR\strokec2 \uc0\u8232 \strokec4 COBOL\strokec2 \uc0\u8232 \strokec4 Cocoa\strokec2 \uc0\u8232 \strokec4 Cocoa touch\strokec2 \uc0\u8232 \strokec4 Code\strokec2 \uc0\u8232 \strokec4 Code page\strokec2 \uc0\u8232 \strokec4 Code refactoring\strokec2 \uc0\u8232 \strokec4 CoffeeScript\strokec2 \uc0\u8232 \strokec4 Command\strokec2 \uc0\u8232 \strokec4 Command language\strokec2 \uc0\u8232 \strokec4 Comment\strokec2 \uc0\u8232 \strokec4 Common business oriented language\strokec2 \uc0\u8232 \strokec4 Common Gateway Interface\strokec2 \uc0\u8232 \strokec4 Commutative operation\strokec2 \uc0\u8232 \strokec4 Compilation\strokec2 \uc0\u8232 \strokec4 Compile\strokec2 \uc0\u8232 \strokec4 Compiler\strokec2 \uc0\u8232 \strokec4 Complementarity\strokec2 \uc0\u8232 \strokec4 Component\strokec2 \uc0\u8232 \strokec4 Compute\strokec2 \uc0\u8232 \strokec4 Computer instructions\strokec2 \uc0\u8232 \strokec4 Computer science\strokec2 \uc0\u8232 \strokec4 Concat\strokec2 \uc0\u8232 \strokec4 Concatenate\strokec2 \uc0\u8232 \strokec4 Concatenation\strokec2 \uc0\u8232 \strokec4 Concurrency\strokec2 \uc0\u8232 \strokec4 Condition\strokec2 \uc0\u8232 \strokec4 Conditional expression\strokec2 \uc0\u8232 \strokec4 Conditional statement\strokec2 \uc0\u8232 \strokec4 Constant\strokec2 \uc0\u8232 \strokec4 Constructor\strokec2 \uc0\u8232 \strokec4 Constructor chaining\strokec2 \uc0\u8232 \strokec4 Content migration\strokec2 \uc0\u8232 \strokec4 Control flow\strokec2 \uc0\u8232 \strokec4 CPAN\strokec2 \uc0\u8232 \strokec4 CPL\strokec2 \uc0\u8232 \strokec4 Crapplet\strokec2 \uc0\u8232 \strokec4 CS\strokec2 \uc0\u8232 \strokec4 CSAT\strokec2 \uc0\u8232 \strokec4 C sharp\strokec2 \uc0\u8232 \strokec4 CSS\strokec2 \uc0\u8232 \strokec4 CSS compressor\strokec2 \uc0\u8232 \strokec4 CSS editor\strokec2 \uc0\u8232 \strokec4 Curly bracket\strokec2 \uc0\u8232 \strokec4 Curry\strokec2 \uc0\u8232 \strokec4 CVS\strokec2 \uc0\u8232 \strokec4 Cygwin\cell \lastrow\row
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Data type\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 D\strokec2 \uc0\u8232 \strokec4 DarkBASIC\strokec2 \uc0\u8232 \strokec4 Dart\strokec2 \uc0\u8232 \strokec4 Data-flow analysis\strokec2 \uc0\u8232 \strokec4 Data flow diagram\strokec2 \uc0\u8232 \strokec4 Dataflow Programming\strokec2 \uc0\u8232 \strokec4 Datalog\strokec2 \uc0\u8232 \strokec4 Data source\strokec2 \uc0\u8232 \strokec4 Data structure\strokec2 \uc0\u8232 \strokec4 Data type\strokec2 \uc0\u8232 \strokec4 DDE\strokec2 \uc0\u8232 \strokec4 DDK\strokec2 \uc0\u8232 \strokec4 Dead code\strokec2 \uc0\u8232 \strokec4 Debug\strokec2 \uc0\u8232 \strokec4 Debugger\strokec2 \uc0\u8232 \strokec4 Debugging\strokec2 \uc0\u8232 \strokec4 Declaration\strokec2 \uc0\u8232 \strokec4 Declarative programming\strokec2 \uc0\u8232 \strokec4 Declare\strokec2 \uc0\u8232 \strokec4 Decompiler\strokec2 \uc0\u8232 \strokec4 Decrement\strokec2 \uc0\u8232 \strokec4 Deductive database\strokec2 \uc0\u8232 \strokec4 Delimiter\strokec2 \uc0\u8232 \strokec4 Demote\strokec2 \uc0\u8232 \strokec4 Dense matrix\strokec2 \uc0\u8232 \strokec4 Dependent variable\strokec2 \uc0\u8232 \strokec4 Deprecated\strokec2 \uc0\u8232 \strokec4 Dereference operator\strokec2 \uc0\u8232 \strokec4 Developer\strokec2 \uc0\u8232 \strokec4 DHTML\strokec2 \uc0\u8232 \strokec4 Die\strokec2 \uc0\u8232 \strokec4 Diff\strokec2 \uc0\u8232 \strokec4 Direct address\strokec2 \uc0\u8232 \strokec4 Disassembler\strokec2 \uc0\u8232 \strokec4 Discrete optimization\strokec2 \uc0\u8232 \strokec4 Div\strokec2 \uc0\u8232 \strokec4 Django\strokec2 \uc0\u8232 \strokec4 DML\strokec2 \uc0\u8232 \strokec4 Do\strokec2 \uc0\u8232 \strokec4 DOM\strokec2 \uc0\u8232 \strokec4 Dragon book\strokec2 \uc0\u8232 \strokec4 Dribbleware\strokec2 \uc0\u8232 \strokec4 Dump\strokec2 \uc0\u8232 \strokec4 Dword\strokec2 \uc0\u8232 \strokec4 Dylan programming language\strokec2 \uc0\u8232 \strokec4 Dynamic binding\strokec2 \uc0\u8232 \strokec4 Dynamic dump\strokec2 \
\strokec4 Eclipse\strokec2 \uc0\u8232 \strokec4 ECMAScript\strokec2 \uc0\u8232 \strokec4 Eight queens problem\strokec2 \uc0\u8232 \strokec4 Element\strokec2 \uc0\u8232 \strokec4 Elixir\strokec2 \uc0\u8232 \strokec4 Ellipsis\strokec2 \uc0\u8232 \strokec4 Else\strokec2 \uc0\u8232 \strokec4 Else if\strokec2 \uc0\u8232 \strokec4 Elsif\strokec2 \uc0\u8232 \strokec4 Embedded Java\strokec2 \uc0\u8232 \strokec4 Encapsulation\strokec2 \uc0\u8232 \strokec4 Enclosing block\strokec2 \uc0\u8232 \strokec4 Encode\strokec2 \uc0\u8232 \strokec4 Endian\strokec2 \uc0\u8232 \strokec4 Endless loop\strokec2 \uc0\u8232 \strokec4 EOF\strokec2 \uc0\u8232 \strokec4 Epoch\strokec2 \uc0\u8232 \strokec4 Eq\strokec2 \uc0\u8232 \strokec4 Equal\strokec2 \uc0\u8232 \strokec4 Erlang\strokec2 \uc0\u8232 \strokec4 Error\strokec2 \uc0\u8232 \strokec4 Errorlevel\strokec2 \uc0\u8232 \strokec4 Esac\strokec2 \uc0\u8232 \strokec4 Esc\strokec2 \uc0\u8232 \strokec4 Escape\strokec2 \uc0\u8232 \strokec4 Escape character\strokec2 \uc0\u8232 \strokec4 Escape sequence\strokec2 \uc0\u8232 \strokec4 Eval\strokec2 \uc0\u8232 \strokec4 Event\strokec2 \uc0\u8232 \strokec4 Event-driven programming\strokec2 \uc0\u8232 \strokec4 Event handler\strokec2 \uc0\u8232 \strokec4 Event listener\strokec2 \uc0\u8232 \strokec4 Exception\strokec2 \uc0\u8232 \strokec4 Exception handling\strokec2 \uc0\u8232 \strokec4 Exec\strokec2 \uc0\u8232 \strokec4 Exists\strokec2 \uc0\u8232 \strokec4 Exit status\strokec2 \uc0\u8232 \strokec4 Exponent\strokec2 \uc0\u8232 \strokec4 Exponential backoff\strokec2 \uc0\u8232 \strokec4 Expression\strokec2 \
\strokec4 F#\strokec2 \uc0\u8232 \strokec4 Factorial\strokec2 \uc0\u8232 \strokec4 False\strokec2 \uc0\u8232 \strokec4 False positive\strokec2 \uc0\u8232 \strokec4 Fifth generation language\strokec2 \uc0\u8232 \strokec4 First-class object\strokec2 \uc0\u8232 \strokec4 First generation language\strokec2 \uc0\u8232 \strokec4 Flag\strokec2 \uc0\u8232 \strokec4 Flat file\strokec2 \uc0\u8232 \strokec4 Floating-point\strokec2 \uc0\u8232 \strokec4 For\strokec2 \uc0\u8232 \strokec4 Foreach\strokec2 \uc0\u8232 \strokec4 Foreign key\strokec2 \uc0\u8232 \strokec4 Forth\strokec2 \uc0\u8232 \strokec4 Forth generation language\strokec2 \uc0\u8232 \strokec4 FORTRAN\strokec2 \uc0\u8232 \strokec4 F programming language\strokec2 \uc0\u8232 \strokec4 Framework\strokec2 \uc0\u8232 \strokec4 Front end\strokec2 \uc0\u8232 \strokec4 Full stack developer\strokec2 \uc0\u8232 \strokec4 Function\strokec2 \uc0\u8232 \strokec4 Functional programming\strokec2 \uc0\u8232 \strokec4 Function call\strokec2 \uc0\u8232 \strokec4 Fuzz testing\strokec2 \
\strokec4 Game of Life\strokec2 \uc0\u8232 \strokec4 Gang of four\strokec2 \uc0\u8232 \strokec4 Garbage collection\strokec2 \uc0\u8232 \strokec4 Gaussian pyramid\strokec2 \uc0\u8232 \strokec4 GCC\strokec2 \uc0\u8232 \strokec4 Ge\strokec2 \uc0\u8232 \strokec4 General-purpose language\strokec2 \uc0\u8232 \strokec4 Generation languages\strokec2 \uc0\u8232 \strokec4 Genetic programming\strokec2 \uc0\u8232 \strokec4 GIGO\strokec2 \uc0\u8232 \strokec4 Git\strokec2 \uc0\u8232 \strokec4 GitHub\strokec2 \uc0\u8232 \strokec4 Glitch\strokec2 \uc0\u8232 \strokec4 Glob\strokec2 \uc0\u8232 \strokec4 Glue code\strokec2 \uc0\u8232 \strokec4 Go\strokec2 \uc0\u8232 \strokec4 Golang\strokec2 \uc0\u8232 \strokec4 Go language\strokec2 \uc0\u8232 \strokec4 Googolplex\strokec2 \uc0\u8232 \strokec4 Goto\strokec2 \uc0\u8232 \strokec4 GPL\strokec2 \uc0\u8232 \strokec4 Grasshopper\strokec2 \uc0\u8232 \strokec4 Greedy\strokec2 \uc0\u8232 \strokec4 Greedy matching\strokec2 \uc0\u8232 \strokec4 GT\strokec2 \uc0\u8232 \strokec4 GTK\strokec2 \uc0\u8232 \strokec4 GW-BASIC\strokec2 \
\strokec4 Hackathon\strokec2 \uc0\u8232 \strokec4 HAL\strokec2 \uc0\u8232 \strokec4 Hard code\strokec2 \uc0\u8232 \strokec4 Hash\strokec2 \uc0\u8232 \strokec4 Haskell\strokec2 \uc0\u8232 \strokec4 HDML\strokec2 \uc0\u8232 \strokec4 Heap\strokec2 \uc0\u8232 \strokec4 Hello world\strokec2 \uc0\u8232 \strokec4 Heroku\strokec2 \uc0\u8232 \strokec4 Heuristic evaluation\strokec2 \uc0\u8232 \strokec4 Hex editor\strokec2 \uc0\u8232 \strokec4 Hiew\strokec2 \uc0\u8232 \strokec4 High-level language\strokec2 \uc0\u8232 \strokec4 HTML\strokec2 \uc0\u8232 \strokec4 Human error\strokec2 \uc0\u8232 \strokec4 Hungarian notation\strokec2 \uc0\u8232 \strokec4 Hwclock\strokec2 \uc0\u8232 \strokec4 Hypertext Markup Language\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 HTML\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \strokec4 IDE\strokec2 \uc0\u8232 \strokec4 Idempotence\strokec2 \uc0\u8232 \strokec4 If else\strokec2 \uc0\u8232 \strokec4 If statement\strokec2 \uc0\u8232 \strokec4 Immutable object\strokec2 \uc0\u8232 \strokec4 Imperative programming\strokec2 \uc0\u8232 \strokec4 Implicit parallelism\strokec2 \uc0\u8232 \strokec4 Increment\strokec2 \uc0\u8232 \strokec4 Indirect address\strokec2 \uc0\u8232 \strokec4 Indirection operator\strokec2 \uc0\u8232 \strokec4 Inherent error\strokec2 \uc0\u8232 \strokec4 Inheritance\strokec2 \uc0\u8232 \strokec4 Inline\strokec2 \uc0\u8232 \strokec4 Input/output statement\strokec2 \uc0\u8232 \strokec4 Instance\strokec2 \uc0\u8232 \strokec4 Instantiation\strokec2 \uc0\u8232 \strokec4 Instructions\strokec2 \uc0\u8232 \strokec4 Int\strokec2 \uc0\u8232 \strokec4 Integer\strokec2 \uc0\u8232 \strokec4 Integrated Development Environment\strokec2 \uc0\u8232 \strokec4 IntelliJ IDEA\strokec2 \uc0\u8232 \strokec4 Intermediate language\strokec2 \uc0\u8232 \strokec4 Interpreted\strokec2 \uc0\u8232 \strokec4 Interpreter\strokec2 \uc0\u8232 \strokec4 Invalid\strokec2 \uc0\u8232 \strokec4 IOCCC\strokec2 \uc0\u8232 \strokec4 IPC\strokec2 \uc0\u8232 \strokec4 ISAPI\strokec2 \uc0\u8232 \strokec4 Iteration\strokec2 \
\strokec4 Java\strokec2 \uc0\u8232 \strokec4 JavaBean\strokec2 \uc0\u8232 \strokec4 Javac\strokec2 \uc0\u8232 \strokec4 Java champion\strokec2 \uc0\u8232 \strokec4 Java EE\strokec2 \uc0\u8232 \strokec4 JavaFX\strokec2 \uc0\u8232 \strokec4 Java ME\strokec2 \uc0\u8232 \strokec4 Java Native Interface\strokec2 \uc0\u8232 \strokec4 Java reserved words\strokec2 \uc0\u8232 \strokec4 JavaScript\strokec2 \uc0\u8232 \strokec4 JavaScriptCore\strokec2 \uc0\u8232 \strokec4 Javax\strokec2 \uc0\u8232 \strokec4 JBuilder\strokec2 \uc0\u8232 \strokec4 JCL\strokec2 \uc0\u8232 \strokec4 JDBC\strokec2 \uc0\u8232 \strokec4 JDK\strokec2 \uc0\u8232 \strokec4 JHTML\strokec2 \uc0\u8232 \strokec4 JIL\strokec2 \uc0\u8232 \strokec4 JIT\strokec2 \uc0\u8232 \strokec4 JNI\strokec2 \uc0\u8232 \strokec4 JRE\strokec2 \uc0\u8232 \strokec4 JScript\strokec2 \uc0\u8232 \strokec4 JSON\strokec2 \uc0\u8232 \strokec4 JSP\strokec2 \uc0\u8232 \strokec4 JSR\strokec2 \uc0\u8232 \strokec4 Julia\strokec2 \uc0\u8232 \strokec4 Jupyter\strokec2 \uc0\u8232 \strokec4 JVM\strokec2 \
\strokec4 Karel\strokec2 \uc0\u8232 \strokec4 Kit\strokec2 \uc0\u8232 \strokec4 Kludge\strokec2 \uc0\u8232 \strokec4 Kluge\strokec2 \uc0\u8232 \strokec4 Knights of Lambda Calculus\strokec2 \uc0\u8232 \strokec4 Kotlin\strokec2 \
\strokec4 Label\strokec2 \uc0\u8232 \strokec4 Lambda calculus\strokec2 \uc0\u8232 \strokec4 Language\strokec2 \uc0\u8232 \strokec4 Language processor\strokec2 \uc0\u8232 \strokec4 Lazy matching\strokec2 \uc0\u8232 \strokec4 Le\strokec2 \uc0\u8232 \strokec4 Lexical analysis\strokec2 \uc0\u8232 \strokec4 Lexicon\strokec2 \uc0\u8232 \strokec4 Library\strokec2 \uc0\u8232 \strokec4 Life cycle\strokec2 \uc0\u8232 \strokec4 Linker\strokec2 \uc0\u8232 \strokec4 LISP\strokec2 \uc0\u8232 \strokec4 Literal\strokec2 \uc0\u8232 \strokec4 Literal string\strokec2 \uc0\u8232 \strokec4 LiveScript\strokec2 \uc0\u8232 \strokec4 LLVM\strokec2 \uc0\u8232 \strokec4 Local optimum\strokec2 \uc0\u8232 \strokec4 Logical operation\strokec2 \uc0\u8232 \strokec4 Logic programming\strokec2 \uc0\u8232 \strokec4 LOGO\strokec2 \uc0\u8232 \strokec4 Lookup table\strokec2 \uc0\u8232 \strokec4 Loony bin\strokec2 \uc0\u8232 \strokec4 Loop\strokec2 \uc0\u8232 \strokec4 Loophole\strokec2 \uc0\u8232 \strokec4 Loosely typed language\strokec2 \uc0\u8232 \strokec4 Low-level language\strokec2 \uc0\u8232 \strokec4 LT\strokec2 \uc0\u8232 \strokec4 Lua\strokec2 \uc0\u8232 \strokec4 LUT\strokec2 \
\strokec4 m1m0\strokec2 \uc0\u8232 \strokec4 Machine language\strokec2 \uc0\u8232 \strokec4 Magic quotes\strokec2 \uc0\u8232 \strokec4 Map\strokec2 \uc0\u8232 \strokec4 Markup language\strokec2 \uc0\u8232 \strokec4 Math\strokec2 \uc0\u8232 \strokec4 Matlab\strokec2 \uc0\u8232 \strokec4 Mbean\strokec2 \uc0\u8232 \strokec4 Memoization\strokec2 \uc0\u8232 \strokec4 Mercurial\strokec2 \uc0\u8232 \strokec4 Meta\strokec2 \uc0\u8232 \strokec4 Metacharacter\strokec2 \uc0\u8232 \strokec4 Metaclass\strokec2 \uc0\u8232 \strokec4 Metalanguage\strokec2 \uc0\u8232 \strokec4 Meta tag\strokec2 \uc0\u8232 \strokec4 Method\strokec2 \uc0\u8232 \strokec4 Method overloading\strokec2 \uc0\u8232 \strokec4 Metro\strokec2 \uc0\u8232 \strokec4 Microsoft BASIC\strokec2 \uc0\u8232 \strokec4 Middleware\strokec2 \uc0\u8232 \strokec4 Mimo\strokec2 \uc0\u8232 \strokec4 Mod\strokec2 \uc0\u8232 \strokec4 Modula\strokec2 \uc0\u8232 \strokec4 Modula-2\strokec2 \uc0\u8232 \strokec4 Modular programming\strokec2 \uc0\u8232 \strokec4 Module\strokec2 \uc0\u8232 \strokec4 Modulo\strokec2 \uc0\u8232 \strokec4 Monkey testing\strokec2 \uc0\u8232 \strokec4 Monte Carlo Method\strokec2 \uc0\u8232 \strokec4 MSDN\strokec2 \uc0\u8232 \strokec4 MSVC\strokec2 \uc0\u8232 \strokec4 Multi-pass compiler\strokec2 \uc0\u8232 \strokec4 Multiply\strokec2 \uc0\u8232 \strokec4 MUMPS\strokec2 \uc0\u8232 \strokec4 Mutex\strokec2 \uc0\u8232 \strokec4 My\strokec2 \
\strokec4 NaN\strokec2 \
\strokec4 Native compiler\strokec2 \
\strokec4 Native language\strokec2 \
\strokec4 Natural language\strokec2 \
\strokec4 NBSP\strokec2 \
\strokec4 NDA\strokec2 \
\strokec4 Ne\strokec2 \
\strokec4 Nest\strokec2 \
\strokec4 Nested function\strokec2 \
\strokec4 Nested loops join\strokec2 \
\strokec4 .NET\strokec2 \
\strokec4 Newline\strokec2 \
\strokec4 Nil pointer\strokec2 \
\strokec4 Nim\strokec2 \
\strokec4 Nimrod\strokec2 \
\strokec4 Node.js\strokec2 \
\strokec4 Nodelist\strokec2 \
\strokec4 Noncontiguous data structure\strokec2 \
\strokec4 Non-disclosure agreement\strokec2 \
\strokec4 Nonexecutable statement\strokec2 \
\strokec4 NO-OPeration instructions\strokec2 \
\strokec4 NP-C\strokec2 \
\strokec4 NP-complete\strokec2 \
\strokec4 Null\strokec2 \
\strokec4 Null character\strokec2 \
\strokec4 Null pointer\strokec2 \
\strokec4 NumPy\strokec2 \uc0\u8232 \strokec3 NBSP\
\strokec4 Oberon\strokec2 \uc0\u8232 \strokec4 Obfuscated code\strokec2 \uc0\u8232 \strokec4 Obfuscation\strokec2 \uc0\u8232 \strokec4 Object\strokec2 \uc0\u8232 \strokec4 Object code\strokec2 \uc0\u8232 \strokec4 Object file\strokec2 \uc0\u8232 \strokec4 Objective-C\strokec2 \uc0\u8232 \strokec4 Object module\strokec2 \uc0\u8232 \strokec4 Object-oriented\strokec2 \uc0\u8232 \strokec4 Object-oriented programming\strokec2 \uc0\u8232 \strokec4 Obtuse\strokec2 \uc0\u8232 \strokec4 OCaml\strokec2 \uc0\u8232 \strokec4 Octave\strokec2 \uc0\u8232 \strokec4 ODBC\strokec2 \uc0\u8232 \strokec4 One-pass compiler\strokec2 \uc0\u8232 \strokec4 OnMouseOver\strokec2 \uc0\u8232 \strokec4 OOP\strokec2 \uc0\u8232 \strokec4 Opcode\strokec2 \uc0\u8232 \strokec4 Open Database Connectivity\strokec2 \uc0\u8232 \strokec4 OpenGL polygon\strokec2 \uc0\u8232 \strokec4 Operand\strokec2 \uc0\u8232 \strokec4 Operation code\strokec2 \uc0\u8232 \strokec4 Operator\strokec2 \uc0\u8232 \strokec4 Operator associatively\strokec2 \uc0\u8232 \strokec4 Operator precedence\strokec2 \uc0\u8232 \strokec4 Order of operations\strokec2 \uc0\u8232 \strokec4 OR operator\strokec2 \uc0\u8232 \strokec4 Overflow error\strokec2 \uc0\u8232 \strokec4 Overload\strokec3 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Pipe\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \strokec3 Program\
\expnd0\expndtw0\kerning0
\outl0\strokewidth0 Programming language\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \uc0\u8232 \strokec4 Package\strokec2 \uc0\u8232 \strokec4 Parenthesis\strokec2 \uc0\u8232 \strokec4 Parse\strokec2 \uc0\u8232 \strokec4 Pascal\strokec2 \uc0\u8232 \strokec4 Pascal case\strokec2 \uc0\u8232 \strokec4 Pastebin\strokec2 \uc0\u8232 \strokec4 P-code\strokec2 \uc0\u8232 \strokec4 PDL\strokec2 \uc0\u8232 \strokec4 PEAR\strokec2 \uc0\u8232 \strokec4 Perl\strokec2 \uc0\u8232 \strokec4 Persistent memory\strokec2 \uc0\u8232 \strokec4 PersonalJava\strokec2 \uc0\u8232 \strokec4 PHP\strokec2 \uc0\u8232 \strokec4 Phrase tag\strokec2 \uc0\u8232 \strokec4 Pick\strokec2 \uc0\u8232 \strokec4 Pickling\strokec2 \uc0\u8232 \strokec4 PicoJava\strokec2 \uc0\u8232 \strokec4 Pipe\strokec2 \uc0\u8232 \strokec4 Pipeline\strokec2 \uc0\u8232 \strokec4 Pixel shader\strokec2 \uc0\u8232 \strokec4 POD\strokec2 \uc0\u8232 \strokec4 Pointer\strokec2 \uc0\u8232 \strokec4 Polymorphism\strokec2 \uc0\u8232 \strokec4 Pop\strokec2 \uc0\u8232 \strokec4 Portable language\strokec2 \uc0\u8232 \strokec4 Positional parameter\strokec2 \uc0\u8232 \strokec4 Print\strokec2 \uc0\u8232 \strokec4 Printf\strokec2 \uc0\u8232 \strokec4 Private\strokec2 \uc0\u8232 \strokec4 Private variable\strokec2 \uc0\u8232 \strokec4 Procedural language\strokec2 \uc0\u8232 \strokec4 Procedure\strokec2 \uc0\u8232 \strokec4 Process\strokec2 \uc0\u8232 \strokec4 Program\strokec2 \uc0\u8232 \strokec4 Program generator\strokec2 \uc0\u8232 \strokec4 Program listing\strokec2 \uc0\u8232 \strokec4 Programmable\strokec2 \uc0\u8232 \strokec4 Programmer\strokec2 \uc0\u8232 \strokec4 Programming\strokec2 \uc0\u8232 \strokec4 Programming in logic\strokec2 \uc0\u8232 \strokec4 Programming language\strokec2 \uc0\u8232 \strokec4 Programming tool\strokec2 \uc0\u8232 \strokec4 Prolog\strokec2 \uc0\u8232 \strokec4 Properties\strokec2 \uc0\u8232 \strokec4 Pseudo-class\strokec2 \uc0\u8232 \strokec4 Pseudocode\strokec2 \uc0\u8232 \strokec4 Pseudolanguage\strokec2 \uc0\u8232 \strokec4 Pseudo-operation\strokec2 \uc0\u8232 \strokec4 Pseudorandom\strokec2 \uc0\u8232 \strokec4 Public\strokec2 \uc0\u8232 \strokec4 Pull\strokec2 \uc0\u8232 \strokec4 PureBasic\strokec2 \uc0\u8232 \strokec4 Push\strokec2 \uc0\u8232 \strokec4 Python\strokec2 \uc0\u8232 \strokec4 Pythonic\strokec2 \uc0\u8232 \strokec4 Python pickling\strokec3 \
\pard\pardeftab720\partightenfactor0
\cf2 \strokec4 Qi\strokec2 \uc0\u8232 \strokec4 QT\strokec2 \uc0\u8232 \strokec4 Quick-and-dirty\strokec3 \
\pard\pardeftab720\partightenfactor0
\cf2 \strokec3 Regex\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec4 Race condition\strokec2 \
\strokec4 Racket\strokec2 \
\strokec4 RAD\strokec2 \
\strokec4 Random\strokec2 \
\strokec4 Random seed\strokec2 \
\strokec4 RCS\strokec2 \
\strokec4 RCW\strokec2 \
\strokec4 RDF\strokec2 \
\strokec4 React\strokec2 \
\strokec4 React Native\strokec2 \
\strokec4 Real number\strokec2 \
\strokec4 Recompile\strokec2 \
\strokec4 Recursion\strokec2 \
\strokec4 Recursive\strokec2 \
\strokec4 Regex\strokec2 \
\strokec4 Regular expression\strokec2 \
\strokec4 Reia\strokec2 \
\strokec4 Relational algebra\strokec2 \
\strokec4 Religion of Chi\strokec2 \
\strokec4 REM\strokec2 \
\strokec4 Remark\strokec2 \
\strokec4 Repeat counter\strokec2 \
\strokec4 Repetition\strokec2 \
\strokec4 REPL\strokec2 \
\strokec4 Reserved character\strokec2 \
\strokec4 Reserved word\strokec2 \
\strokec4 Resource Description Framework\strokec2 \
\strokec4 Return address\strokec2 \
\strokec4 Return statement\strokec2 \
\strokec4 Reverse engineering\strokec2 \
\strokec4 Revision control\strokec2 \
\strokec4 ROM BASIC\strokec2 \
\strokec4 Routine\strokec2 \
\strokec4 Routing algorithm\strokec2 \
\strokec4 RPG\strokec2 \
\strokec4 R programming language\strokec2 \
\strokec4 Ruby\strokec2 \
\strokec4 Run time\strokec2 \
\strokec4 Runtime callable wrapper\strokec2 \
\strokec4 Rust\
Safe font\strokec2 \uc0\u8232 \strokec4 Sandbox\strokec2 \uc0\u8232 \strokec4 Say\strokec2 \uc0\u8232 \strokec4 Scala\strokec2 \uc0\u8232 \strokec4 Scalar\strokec2 \uc0\u8232 \strokec4 Scanf\strokec2 \uc0\u8232 \strokec4 Schema matching\strokec2 \uc0\u8232 \strokec4 Scheme programming language\strokec2 \uc0\u8232 \strokec4 Scratch\strokec2 \uc0\u8232 \strokec4 Script\strokec2 \uc0\u8232 \strokec4 SDK\strokec2 \uc0\u8232 \strokec4 Second generation language\strokec2 \uc0\u8232 \strokec4 Section\strokec2 \uc0\u8232 \strokec4 Security Descriptor Definition Language\strokec2 \uc0\u8232 \strokec4 Seed\strokec2 \uc0\u8232 \strokec4 Segfault\strokec2 \uc0\u8232 \strokec4 Semaphore\strokec2 \uc0\u8232 \strokec4 Separator\strokec2 \uc0\u8232 \strokec4 Sequence\strokec2 \uc0\u8232 \strokec4 Server-side\strokec2 \uc0\u8232 \strokec4 Server-side scripting\strokec2 \uc0\u8232 \strokec4 Servlet\strokec2 \uc0\u8232 \strokec4 S-expression\strokec2 \uc0\u8232 \strokec4 SGML\strokec2 \uc0\u8232 \strokec4 Shebang\strokec2 \uc0\u8232 \strokec4 Shell\strokec2 \uc0\u8232 \strokec4 Shell scripts\strokec2 \uc0\u8232 \strokec4 Shift\strokec2 \uc0\u8232 \strokec4 Short-circuit operator\strokec2 \uc0\u8232 \strokec4 Signedness\strokec2 \uc0\u8232 \strokec4 Simula\strokec2 \uc0\u8232 \strokec4 Simulated annealing\strokec2 \uc0\u8232 \strokec4 Single step\strokec2 \uc0\u8232 \strokec4 Smalltalk\strokec2 \uc0\u8232 \strokec4 SMIL\strokec2 \uc0\u8232 \strokec4 Snippet\strokec2 \uc0\u8232 \strokec4 SOAP\strokec2 \uc0\u8232 \strokec4 Socket\strokec2 \uc0\u8232 \strokec4 Soft\strokec2 \uc0\u8232 \strokec4 Software development phases\strokec2 \uc0\u8232 \strokec4 Software development process\strokec2 \uc0\u8232 \strokec4 Software engineering\strokec2 \uc0\u8232 \strokec4 Software library\strokec2 \uc0\u8232 \strokec4 Software life cycle\strokec2 \uc0\u8232 \strokec4 Software release life cycle\strokec2 \uc0\u8232 \strokec4 Source\strokec2 \uc0\u8232 \strokec4 Source code\strokec2 \uc0\u8232 \strokec4 Source computer\strokec2 \uc0\u8232 \strokec4 Source data\strokec2 \uc0\u8232 \strokec4 SourceForge\strokec2 \uc0\u8232 \strokec4 Spaghetti code\strokec2 \uc0\u8232 \strokec4 Sparse matrix\strokec2 \uc0\u8232 \strokec4 Sparsity\strokec2 \uc0\u8232 \strokec4 Special purpose language\strokec2 \uc0\u8232 \strokec4 SPL\strokec2 \uc0\u8232 \strokec4 Spooling\strokec2 \uc0\u8232 \strokec4 SQL\strokec2 \uc0\u8232 \strokec4 SQLite\strokec2 \uc0\u8232 \strokec4 Stack\strokec2 \uc0\u8232 \strokec4 Stack pointer\strokec2 \uc0\u8232 \strokec4 Standard attribute\strokec2 \uc0\u8232 \strokec4 Statement\strokec2 \uc0\u8232 \strokec4 Stdin\strokec2 \uc0\u8232 \strokec4 Stream processing\strokec2 \uc0\u8232 \strokec4 String\strokec2 \uc0\u8232 \strokec4 Strongly typed language\strokec2 \uc0\u8232 \strokec4 Stubroutine\strokec2 \uc0\u8232 \strokec4 Stylesheet\strokec2 \uc0\u8232 \strokec4 Submit\strokec2 \uc0\u8232 \strokec4 Subprogram\strokec2 \uc0\u8232 \strokec4 Subroutine\strokec2 \uc0\u8232 \strokec4 Subscript\strokec2 \uc0\u8232 \strokec4 Substring\strokec2 \uc0\u8232 \strokec4 Subtract\strokec2 \uc0\u8232 \strokec4 Subversion\strokec2 \uc0\u8232 \strokec4 Superclass\strokec2 \uc0\u8232 \strokec4 Swift\strokec2 \uc0\u8232 \strokec4 Switch statement\strokec2 \uc0\u8232 \strokec4 Syntactic sugar\strokec2 \uc0\u8232 \strokec4 Syntax\strokec2 \uc0\u8232 \strokec4 Syntax error\strokec2 \uc0\u8232 \strokec4 System development\strokec2 \uc0\u8232 \strokec4 Systems engineer\strokec2 \uc0\u8232 \strokec4 Systems Programming Language\
Tail recursion\strokec2 \uc0\u8232 \strokec4 Tcl\strokec2 \uc0\u8232 \strokec4 Tk\strokec2 \uc0\u8232 \strokec4 Ternary\strokec2 \uc0\u8232 \strokec4 Ternary operator\strokec2 \uc0\u8232 \strokec4 Tessellation\strokec2 \uc0\u8232 \strokec4 Theoretical computer science\strokec2 \uc0\u8232 \strokec4 Third-generation programming language\strokec2 \uc0\u8232 \strokec4 Thread\strokec2 \uc0\u8232 \strokec4 Thunk\strokec2 \uc0\u8232 \strokec4 Tk\strokec2 \uc0\u8232 \strokec4 Token\strokec2 \uc0\u8232 \strokec4 ToolboX\strokec2 \uc0\u8232 \strokec4 Transcompiler\strokec2 \uc0\u8232 \strokec4 True\strokec2 \uc0\u8232 \strokec4 True BASIC\strokec2 \uc0\u8232 \strokec4 Trunk\strokec2 \uc0\u8232 \strokec4 Tuple\strokec2 \uc0\u8232 \strokec4 Turbo Pascal\strokec2 \uc0\u8232 \strokec4 Turing completeness\
Udacity\strokec2 \uc0\u8232 \strokec4 UInt8\strokec2 \uc0\u8232 \strokec4 UInt16\strokec2 \uc0\u8232 \strokec4 UInt32\strokec2 \uc0\u8232 \strokec4 Unary operator\strokec2 \uc0\u8232 \strokec4 Undefined\strokec2 \uc0\u8232 \strokec4 Undefined variable\strokec2 \uc0\u8232 \strokec4 Underflow\strokec2 \uc0\u8232 \strokec4 Unescape\strokec2 \uc0\u8232 \strokec4 Unit test\strokec2 \uc0\u8232 \strokec4 Unshift\strokec2 \
\strokec4 Value\strokec2 \uc0\u8232 \strokec4 Var\strokec2 \uc0\u8232 \strokec4 Variable\strokec2 \uc0\u8232 \strokec4 Variable expression\strokec2 \uc0\u8232 \strokec4 VB\strokec2 \uc0\u8232 \strokec4 VBScript\strokec2 \uc0\u8232 \strokec4 Vector\strokec2 \uc0\u8232 \strokec4 VHDL\strokec2 \uc0\u8232 \strokec4 VIM\strokec2 \uc0\u8232 \strokec4 Visual Basic\strokec2 \uc0\u8232 \strokec4 Visual Studio\strokec2 \uc0\u8232 \strokec4 Void\strokec2 \uc0\u8232 \strokec4 Vue\strokec2 \uc0\u8232 \strokec4 Vue.js\strokec2 \
\strokec4 Wasm\strokec2 \uc0\u8232 \strokec4 Waterfall model\strokec2 \uc0\u8232 \strokec4 WDF\strokec2 \uc0\u8232 \strokec4 WebAssembly\strokec2 \uc0\u8232 \strokec4 Web development\strokec2 \uc0\u8232 \strokec4 WebGL\strokec2 \uc0\u8232 \strokec4 While\strokec2 \uc0\u8232 \strokec4 Whole number\strokec2 \uc0\u8232 \strokec4 Windows Driver Kit\strokec2 \uc0\u8232 \strokec4 WML\strokec2 \uc0\u8232 \strokec4 Workspace\strokec2 \
\strokec4 XML\strokec2 \uc0\u8232 \strokec4 XNA\strokec2 \uc0\u8232 \strokec4 XOR operator\strokec2 \uc0\u8232 \strokec4 XOXO\strokec2 \uc0\u8232 \strokec4 XSL\strokec2 \uc0\u8232 \strokec4 XSLT\strokec2 \
\strokec4 YAML\strokec2 \uc0\u8232 \strokec4 Y combinator\strokec2 \
\strokec4 Z-buffering\strokec2 \uc0\u8232 \strokec4 Zombie\strokec2 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec3 \
}